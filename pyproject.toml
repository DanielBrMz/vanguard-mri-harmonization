[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vanguard-mri-harmonization"
version = "0.1.0"
description = "Bayesian deep learning for cross-site MRI harmonization with uncertainty quantification"
authors = [
    {name = "Daniel Barreras", email = "daniel.barreras@research.org"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["deep learning", "medical imaging", "MRI", "harmonization", "bayesian", "uncertainty quantification"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[project.urls]
Homepage = "https://github.com/DanielBrMz/vanguard-mri-harmonization"
Repository = "https://github.com/DanielBrMz/vanguard-mri-harmonization"
Documentation = "https://danielbrmz.github.io/vanguard-mri-harmonization"
"Bug Tracker" = "https://github.com/DanielBrMz/vanguard-mri-harmonization/issues"

[project.scripts]
vanguard-train = "vanguard.training.train:main"
vanguard-evaluate = "vanguard.evaluation.evaluate:main"
vanguard-preprocess = "vanguard.data.preprocess:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"vanguard" = ["configs/*.yaml", "data/templates/*"]

# Black formatting configuration
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting configuration
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "mathematical: marks tests as mathematical verification tests",
    "gpu: marks tests that require GPU",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/vanguard"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# MyPy type checking configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "nibabel.*",
    "SimpleITK.*",
    "monai.*",
    "wandb.*",
    "matplotlib.*",
    "seaborn.*",
]
ignore_missing_imports = true
